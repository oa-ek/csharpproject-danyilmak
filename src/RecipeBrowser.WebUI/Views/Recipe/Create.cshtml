@using RecipeBrowser.Core.Entities
@model Recipe

@{
    var types = ViewBag.Types as List<SelectListItem>;
    var difficulties = ViewBag.Difficulties as List<SelectListItem>;
    var products = ViewBag.Products as List<SelectListItem>;
    var measures = ViewBag.Measures as List<SelectListItem>;
    var users = ViewBag.Users as List<SelectListItem>;
}

<div class="card @(User.IsInRole("Admin") ? "w-50" : "") m-auto">
    <div class="card-header px-3 text-center">
        <h1>Новий рецепт<h1>
    </div>
    <div class="card-body">
        <form asp-action="Create" enctype="multipart/form-data">
            <div class="container-fluid px-5 py-2">
                @Html.AntiForgeryToken()
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="Title">Назва</label>
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control mt-2" })
                </div>
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="Duration">Тривалість приготування в хвилинах</label>
                    <input asp-for="CookDuration" min="0" step="1" />
                </div>
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="Type">Спосіб приготування</label>
                    <select asp-for="TypeId" asp-items="@(types)" class="form-control mt-2">
                        <option value="0" selected="selected">- Оберіть спосіб приготування -</option>
                    </select>
                </div>
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="Difficulty">Складність приготування</label>
                    <select asp-for="DifficultyId" asp-items="@(difficulties)" class="form-control mt-2">
                        <option value="0" selected="selected">- Оберіть складність приготування -</option>
                    </select>
                </div>
                @if(User.IsInRole("Admin"))
                {
                    <div class="my-3 col-md-8 m-auto text-center">
                        <label for="Creator">Автор рецепту</label>
                        <select asp-for="CreatorId" asp-items="@(users)" class="form-control mt-2">
                            <option value="0" selected="selected">- Оберіть автора -</option>
                        </select>
                    </div>
                }
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="ImageFile">Фото страви</label>
                    <input asp-for="ImagePath" type="hidden" />
                    <input asp-for="ImageFile" accept="image/*" />
                </div>
                <div class="my-3 col-md-10 m-auto text-center">
                    <label for="Description">Покрокова інструкція</label>
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control mt-2", @style = "min-height: 400px;" })
                </div>
                <hr />
                <h4>Інгредієнти</h4>
                <div class="my-3 col-md-8 m-auto text-center">
                    <label for="IngredientAmount">Кількість</label>
                    <input id="IngredientAmount" type="number" min="0" step="0.01" class="form-control mt-2" />
                </div>
                <div class="my-3 col-md-10 m-auto text-center d-flex align-items-center gap-2">
                    <div class="my-3 m-auto text-center w-50">
                        <label for="IngredientProduct">Продукт</label>
                        <select id="IngredientProduct" class="form-control">
                            <option value="0" selected="selected">- Оберіть продукт -</option>
                            @foreach (var product in products)
                            {
                                <option value="@product.Value">@product.Text</option>
                            }
                        </select>
                    </div>
                    <div class="my-3 m-auto text-center w-50">
                        <label for="IngredientMeasure">Міра</label>
                        <select id="IngredientMeasure" class="form-control">
                            <option value="0" selected="selected">- Оберіть міру -</option>
                            @foreach (var measure in measures)
                            {
                                <option value="@measure.Value">@measure.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="my-3 col-md-8 m-auto text-center">
                    <button type="button" class="btn btn-primary" onclick="addIngredient()">Додати інгредієнт</button>
                </div>
                <ul id="ingredientList" class="list-group my-3 col-md-8 m-auto text-center">
                    @* List to display added ingredients *@
                </ul>
                <div class="d-flex gap-2 align-items-center justify-content-center">
                    <button class="btn btn-primary w-25" type="submit">Створити</button>
                    @if(User.IsInRole("Admin"))
                    {
                        <a class="btn btn-dark my-2 w-25" asp-action="">До списку</a>
                    }else
                    {
                        <a class="btn btn-dark my-2 w-25" href="/Recipe/UserView">До списку</a>
                    }
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const ingredients = [];

        function addIngredient() {
            let amount = document.getElementById('IngredientAmount').value;
            const measure = document.getElementById('IngredientMeasure');
            const product = document.getElementById('IngredientProduct');
            const measureText = measure.options[measure.selectedIndex].text;
            const productText = product.options[product.selectedIndex].text;

            // Replace decimal separator based on the culture setting of the server
            amount = amount.replace('.', ',');

            if (amount && measure.value !== '0' && product.value !== '0') {
                const ingredient = {
                    amount: amount,
                    measureId: measure.value,
                    measureText: measureText,
                    productId: product.value,
                    productText: productText
                };

                ingredients.push(ingredient);
                renderIngredientList();
            } else {
                alert('Please fill in all fields for the ingredient.');
            }
        }

        function removeIngredient(index) {
            ingredients.splice(index, 1);
            renderIngredientList();
        }

        function renderIngredientList() {
            const list = document.getElementById('ingredientList');
            list.innerHTML = '';

            ingredients.forEach((ingredient, index) => {
                const item = document.createElement('li');
                item.className = 'list-group-item d-flex justify-content-between align-items-center';
                item.innerHTML = `
                            ${ingredient.amount} ${ingredient.measureText} ${ingredient.productText}
                            <button type="button" class="btn btn-danger btn-sm" onclick="removeIngredient(${index})">Видалити</button>
                            <input type="hidden" name="Ingredients[${index}].Amount" value="${ingredient.amount}" />
                            <input type="hidden" name="Ingredients[${index}].MeasureId" value="${ingredient.measureId}" />
                            <input type="hidden" name="Ingredients[${index}].ProductId" value="${ingredient.productId}" />
                        `;
                list.appendChild(item);
            });
        }
    </script>
}
